const prefixList = [
  "墨染",
  "听雨",
  "素衣",
  "青衫",
  "清风",
  "疏影",
  "浮云",
  "半夏",
  "南风",
  "浅梦",
  "书声",
  "归舟",
  "长安",
  "独行",
  "折柳",
  "念远",
  "闲月",
  "落雪",
  "醉雨",
  "煮茶",
  "云深",
  "竹影",
  "柳下",
  "星沉",
  "夜半",
  "江南",
  "寒山",
  "碎梦",
  "惜春",
  "雁回",
  "寒灯",
  "月白",
  "夜雨",
  "故里",
  "风眠",
  "旧笺",
  "青灯",
  "渔火",
  "西窗",
  "微光",
  "斜阳",
  "素笺",
  "花间",
  "苍苔",
  "青萝",
  "孤舟",
  "丹枫",
  "听雪",
  "南亭",
  "水墨",
  "疏钟",
  "书简",
  "浅夏",
  "落梅",
  "旧巷",
  "柳烟",
  "断桥",
  "霜重",
  "灯火",
  "旧梦",
  "秋水",
  "飞絮",
  "夜莺",
  "松间",
  "山川",
  "雾散",
  "故人",
  "夜色",
  "古道",
  "幽篁",
  "海棠",
  "浮灯",
  "香袭",
  "北雁",
  "雪落",
  "醉墨",
  "夜归",
  "一笙",
  "雁字",
  "枫林",
  "晓风",
  "落日",
  "微雨",
  "旧词",
  "烛影",
  "对月",
  "惊鸿",
  "青瓦",
  "溪语",
  "冷月",
  "余笙",
  "暗香",
  "流萤",
  "星野",
  "飞花",
  "长街",
  "远山",
  "云起",
  "飞絮",
  "锦书",
];

const suffixList = [
  "归舟",
  "煮茶",
  "对月",
  "折花",
  "听雪",
  "入梦",
  "看山",
  "饮酒",
  "踏歌",
  "寄笺",
  "对影",
  "问柳",
  "辞青",
  "听风",
  "弄笛",
  "携琴",
  "访云",
  "拾光",
  "隐川",
  "看云",
  "寻梅",
  "观星",
  "泛舟",
  "落笔",
  "吟诗",
  "折柳",
  "写意",
  "眠月",
  "焚香",
  "折纸",
  "醉月",
  "留白",
  "访古",
  "观景",
  "种菊",
  "断章",
  "悟禅",
  "研墨",
  "赏梅",
  "煮雪",
  "书茶",
  "看灯",
  "枕霞",
  "载酒",
  "裁云",
  "踏雪",
  "散心",
  "凭栏",
  "临帖",
  "栖霞",
  "寻香",
  "携手",
  "话旧",
  "吟风",
  "听钟",
  "静坐",
  "归林",
  "折扇",
  "访友",
  "点茶",
  "登楼",
  "舞剑",
  "执笔",
  "煮墨",
  "游湖",
  "临风",
  "听雨",
  "煎茶",
  "临水",
  "对弈",
  "描眉",
  "弄琴",
  "抚弦",
  "挂画",
  "咏雪",
  "拾花",
  "种松",
  "扫径",
  "夜读",
  "吟秋",
  "裁衣",
  "披雪",
  "行舟",
  "吟夏",
  "探梅",
  "醉酒",
  "登顶",
  "观潮",
  "钓月",
  "照影",
  "挂灯",
  "探幽",
  "观鹤",
  "抚琴",
  "弄月",
  "看花",
  "临云",
  "抄经",
  "访竹",
  "舞笛",
];

const connectors = [
  "", // 直连
  "·", // 点缀风格
  "之", // 古风表达
  "于", // 文雅表达
  "与", // 搭配、相伴
  "映", // 映照、交融
  "共", // 携伴、并肩
  "向", // 朝向、归宿
  "绕", // 环绕、缠绵
  "傍", // 相伴、守候
  "随", // 随行、跟随
  "望", // 期盼、凝视
  "乘", // 承载、携行
  "落", // 降临、降于
  "依", // 依靠、倚仗
  "恋", // 喜爱、依恋
  "入", // 进入、踏入
  "归", // 回归、归处
  "对", // 对视、对影
  "照", // 映照、辉映
];

/** 生成随机用户名 */
export function generate_random_name() {
  const p = prefixList[Math.floor(Math.random() * prefixList.length)];
  const c = suffixList[Math.floor(Math.random() * suffixList.length)];
  const con = connectors[Math.floor(Math.random() * connectors.length)];

  return `E-${p}${con}${c}`;
}
